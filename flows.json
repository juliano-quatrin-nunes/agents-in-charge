[
    {
        "id": "0008fcf0ac8e3fc4",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ed6860563e1d5fc",
        "type": "tab",
        "label": "TesteAPi",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3b54fe11238dcaed",
        "type": "subflow",
        "name": "discard_diverter_post",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "501e718aecea2ca7",
        "type": "subflow",
        "name": "discard_diverter_get",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1f735b7c1ec2a540",
        "type": "subflow",
        "name": "endpoint_discard_diverter_module",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1a29c5eb11ee4ae1",
        "type": "subflow",
        "name": "Send Bad Request",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "d90610f48c819e2e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "14e0290e2bea4e8c",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://150.162.14.27:4840",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "5eef420cd0425bb0",
        "type": "OpcUa-Endpoint",
        "z": "3b54fe11238dcaed",
        "endpoint": "opc.tcp://Bridge:53530/OPCUA/SimulationServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "b3167a04a4347352",
        "type": "http in",
        "z": "3b54fe11238dcaed",
        "name": "post status",
        "url": "/separating/discardDiverter",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 60,
        "y": 200,
        "wires": [
            [
                "4ae7398ac61c5732"
            ]
        ]
    },
    {
        "id": "b9c0c8cc76eaf506",
        "type": "OpcUa-Item",
        "z": "3b54fe11238dcaed",
        "item": "ns=4;i=2",
        "datatype": "Boolean",
        "value": "",
        "name": "",
        "x": 600,
        "y": 200,
        "wires": [
            [
                "ce3f6ea078daf688"
            ]
        ]
    },
    {
        "id": "ce3f6ea078daf688",
        "type": "OpcUa-Client",
        "z": "3b54fe11238dcaed",
        "endpoint": "14e0290e2bea4e8c",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 780,
        "y": 200,
        "wires": [
            [
                "e8ced68061e96677"
            ],
            []
        ]
    },
    {
        "id": "01f3fa6e17663c76",
        "type": "inject",
        "z": "3b54fe11238dcaed",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "str",
        "x": 370,
        "y": 20,
        "wires": [
            [
                "b9c0c8cc76eaf506"
            ]
        ]
    },
    {
        "id": "e8ced68061e96677",
        "type": "OpcUa-Item",
        "z": "3b54fe11238dcaed",
        "item": "ns=4;i=2",
        "datatype": "Boolean",
        "value": "",
        "name": "",
        "x": 980,
        "y": 240,
        "wires": [
            [
                "cb7ef1c3f473e5da"
            ]
        ]
    },
    {
        "id": "cb7ef1c3f473e5da",
        "type": "OpcUa-Client",
        "z": "3b54fe11238dcaed",
        "endpoint": "5eef420cd0425bb0",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 1180,
        "y": 240,
        "wires": [
            [
                "2fbf8dac450c8cdc"
            ],
            []
        ]
    },
    {
        "id": "2fbf8dac450c8cdc",
        "type": "function",
        "z": "3b54fe11238dcaed",
        "name": "prepare_response",
        "func": "msg.payload = { \"status\": msg.payload };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 240,
        "wires": [
            [
                "df9b6ea2fda7202d"
            ]
        ]
    },
    {
        "id": "df9b6ea2fda7202d",
        "type": "http response",
        "z": "3b54fe11238dcaed",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1590,
        "y": 240,
        "wires": []
    },
    {
        "id": "60552216b3504c5a",
        "type": "comment",
        "z": "3b54fe11238dcaed",
        "name": "recupera o estado do componente",
        "info": "OPC UA Cliente sempre retorna\num \"payload: 0\", independente do que é\npassado.\n\nAssim é feito um 'get' do estado\npara retornar se o estado do componente\nmudou de fato",
        "x": 1080,
        "y": 200,
        "wires": []
    },
    {
        "id": "31402a45caf73a3b",
        "type": "comment",
        "z": "3b54fe11238dcaed",
        "name": "altera o estado do componente",
        "info": "",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "4ae7398ac61c5732",
        "type": "function",
        "z": "3b54fe11238dcaed",
        "name": "payload",
        "func": "msg.payload = msg.req.body.value;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 200,
        "wires": [
            [
                "ab68424856c22849"
            ]
        ]
    },
    {
        "id": "ab68424856c22849",
        "type": "switch",
        "z": "3b54fe11238dcaed",
        "name": "validate",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 360,
        "y": 200,
        "wires": [
            [
                "b9c0c8cc76eaf506"
            ],
            [
                "b9c0c8cc76eaf506"
            ],
            [
                "4c38741330d8e4f4"
            ]
        ]
    },
    {
        "id": "4c38741330d8e4f4",
        "type": "subflow:1a29c5eb11ee4ae1",
        "z": "3b54fe11238dcaed",
        "name": "Send Bad Request",
        "x": 650,
        "y": 360,
        "wires": []
    },
    {
        "id": "0b7991cfc665dd32",
        "type": "http in",
        "z": "501e718aecea2ca7",
        "name": "get status",
        "url": "/separating/discardDiverter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "a961b59b528f1362"
            ]
        ]
    },
    {
        "id": "a961b59b528f1362",
        "type": "OpcUa-Item",
        "z": "501e718aecea2ca7",
        "item": "ns=4;i=2",
        "datatype": "Boolean",
        "value": "",
        "name": "",
        "x": 420,
        "y": 100,
        "wires": [
            [
                "17c7057090b2d153"
            ]
        ]
    },
    {
        "id": "17c7057090b2d153",
        "type": "OpcUa-Client",
        "z": "501e718aecea2ca7",
        "endpoint": "14e0290e2bea4e8c",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 620,
        "y": 100,
        "wires": [
            [
                "4f67abc41e51a106"
            ],
            []
        ]
    },
    {
        "id": "7a9d55ba0cba4aba",
        "type": "inject",
        "z": "501e718aecea2ca7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "a961b59b528f1362"
            ]
        ]
    },
    {
        "id": "08f42bf24c561626",
        "type": "http response",
        "z": "501e718aecea2ca7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 100,
        "wires": []
    },
    {
        "id": "4f67abc41e51a106",
        "type": "function",
        "z": "501e718aecea2ca7",
        "name": "prepare_response",
        "func": "msg.payload = { \"status\": msg.payload };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 100,
        "wires": [
            [
                "08f42bf24c561626"
            ]
        ]
    },
    {
        "id": "9bac4cf327fd1c4c",
        "type": "subflow:3b54fe11238dcaed",
        "z": "1f735b7c1ec2a540",
        "name": "post",
        "x": 190,
        "y": 140,
        "wires": []
    },
    {
        "id": "3906a6a6ab0a6293",
        "type": "subflow:501e718aecea2ca7",
        "z": "1f735b7c1ec2a540",
        "name": "get",
        "x": 190,
        "y": 80,
        "wires": []
    },
    {
        "id": "6afc88ee26fba6ac",
        "type": "http response",
        "z": "1a29c5eb11ee4ae1",
        "name": "Bad request",
        "statusCode": "400",
        "headers": {},
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "d90610f48c819e2e",
        "type": "template",
        "z": "1a29c5eb11ee4ae1",
        "name": "Prepare Response",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": {{payload}},\n    \"message\": \"Valor não é do tipo esperado.\"\n}",
        "output": "json",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "6afc88ee26fba6ac"
            ]
        ]
    },
    {
        "id": "bc5bf8f6432d32df",
        "type": "subflow:1f735b7c1ec2a540",
        "z": "0008fcf0ac8e3fc4",
        "name": "endpoint_discard_diverter_module",
        "x": 400,
        "y": 340,
        "wires": []
    },
    {
        "id": "64ec626b5718298f",
        "type": "http in",
        "z": "3ed6860563e1d5fc",
        "name": "",
        "url": "/api/test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "02952edc7f44ab70",
                "4407052da14e8443"
            ]
        ]
    },
    {
        "id": "02952edc7f44ab70",
        "type": "debug",
        "z": "3ed6860563e1d5fc",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 360,
        "wires": []
    },
    {
        "id": "9dcd89b5bc7ad504",
        "type": "http response",
        "z": "3ed6860563e1d5fc",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1000,
        "y": 280,
        "wires": []
    },
    {
        "id": "4407052da14e8443",
        "type": "change",
        "z": "3ed6860563e1d5fc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "413ea6d2aed6c3f5"
            ]
        ]
    },
    {
        "id": "413ea6d2aed6c3f5",
        "type": "function",
        "z": "3ed6860563e1d5fc",
        "name": "function 2",
        "func": "msg.payload = { \"status\": msg.payload };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 280,
        "wires": [
            [
                "9dcd89b5bc7ad504"
            ]
        ]
    }
]