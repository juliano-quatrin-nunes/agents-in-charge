[
    {
        "id": "0008fcf0ac8e3fc4",
        "type": "tab",
        "label": "Separating",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "opc_endpoint",
                "value": "opc.tcp://150.162.14.27:4840",
                "type": "str"
            },
            {
                "name": "http",
                "value": "http://127.0.0.1:1880",
                "type": "str"
            }
        ]
    },
    {
        "id": "1f735b7c1ec2a540",
        "type": "subflow",
        "name": "POST request",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1020,
                "y": 340,
                "wires": [
                    {
                        "id": "5527d91086708f8f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "node_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "opc_endpoint",
                "type": "env",
                "value": "opc_endpoint"
            },
            {
                "name": "http_endpoint",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#FFCC66",
        "icon": "font-awesome/fa-television"
    },
    {
        "id": "1a29c5eb11ee4ae1",
        "type": "subflow",
        "name": "Bad Request",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "d90610f48c819e2e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#C7E9C0",
        "inputLabels": [
            "value"
        ],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "e5b98768751d086a",
        "type": "subflow",
        "name": "Successful Post",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "485bba2c4636a4ea"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#C7E9C0",
        "inputLabels": [
            "value"
        ],
        "icon": "font-awesome/fa-check"
    },
    {
        "id": "dc1ef54720b3dae9",
        "type": "subflow",
        "name": "Successful Get",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "8efdc158c2053ade"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#C7E9C0",
        "inputLabels": [
            "value"
        ],
        "icon": "font-awesome/fa-check"
    },
    {
        "id": "c7b5baace1041e43",
        "type": "subflow",
        "name": "GET request",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 600,
                "y": 120,
                "wires": [
                    {
                        "id": "a961b59b528f1362",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "http_endpoint",
                "type": "str",
                "value": ""
            },
            {
                "name": "opc_endpoint",
                "type": "env",
                "value": "opc_endpoint"
            },
            {
                "name": "node_id",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#FFCC66",
        "icon": "font-awesome/fa-arrow-left"
    },
    {
        "id": "ee1d8aad80d43cea",
        "type": "subflow",
        "name": "Check program",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "6e3428e3aa890173"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1040,
                "y": 200,
                "wires": [
                    {
                        "id": "609abcc028c9214a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#C7E9C0",
        "icon": "node-red/alert.svg"
    },
    {
        "id": "14e0290e2bea4e8c",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://150.162.14.27:4840",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "c2fd6ea3cc083b70",
        "type": "OpcUa-Endpoint",
        "z": "1f735b7c1ec2a540",
        "endpoint": "${opc_endpoint}",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "cc5c531b1a3180a0",
        "type": "OpcUa-Endpoint",
        "z": "c7b5baace1041e43",
        "endpoint": "${opc_endpoint}",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "ba1646fb305b7868",
        "type": "OpcUa-Endpoint",
        "endpoint": "${opc_endpoint}",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "32536815fe41e908",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "default"
    },
    {
        "id": "cf44edaefa818622",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "a47bb98b8993e45f",
        "type": "ui-page",
        "name": "Page 1",
        "ui": "32536815fe41e908",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "cf44edaefa818622",
        "breakpoints": [
            {
                "name": "Default",
                "px": 0,
                "cols": 3
            },
            {
                "name": "Tablet",
                "px": 576,
                "cols": 6
            },
            {
                "name": "Small Desktop",
                "px": 768,
                "cols": 9
            },
            {
                "name": "Desktop",
                "px": 1024,
                "cols": 12
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8347937ce163c9e6",
        "type": "ui-group",
        "name": "Group 1",
        "page": "a47bb98b8993e45f",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": true,
        "disabled": false,
        "groupType": "default"
    },
    {
        "id": "b3167a04a4347352",
        "type": "http in",
        "z": "1f735b7c1ec2a540",
        "name": "post status",
        "url": "${http_endpoint}",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 60,
        "y": 340,
        "wires": [
            [
                "4ae7398ac61c5732"
            ]
        ]
    },
    {
        "id": "31402a45caf73a3b",
        "type": "comment",
        "z": "1f735b7c1ec2a540",
        "name": "altera o estado do componente",
        "info": "",
        "x": 970,
        "y": 280,
        "wires": []
    },
    {
        "id": "4ae7398ac61c5732",
        "type": "function",
        "z": "1f735b7c1ec2a540",
        "name": "payload",
        "func": "const body = JSON.parse(msg.req.body)\n\nmsg.payload = body.value;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 340,
        "wires": [
            [
                "c33f019dedc2ee5c"
            ]
        ]
    },
    {
        "id": "ab68424856c22849",
        "type": "switch",
        "z": "1f735b7c1ec2a540",
        "name": "validate",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 720,
        "y": 340,
        "wires": [
            [
                "5527d91086708f8f"
            ],
            [
                "5527d91086708f8f"
            ],
            [
                "4c38741330d8e4f4"
            ]
        ]
    },
    {
        "id": "c33f019dedc2ee5c",
        "type": "function",
        "z": "1f735b7c1ec2a540",
        "name": "Transform to boolean",
        "func": "if (msg.payload == 0) {\n    msg.payload = false\n}\nif (msg.payload == 1) {\n    msg.payload = true\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 340,
        "wires": [
            [
                "ab68424856c22849"
            ]
        ]
    },
    {
        "id": "5527d91086708f8f",
        "type": "OpcUa-Item",
        "z": "1f735b7c1ec2a540",
        "item": "${node_id}",
        "datatype": "Boolean",
        "value": "",
        "name": "",
        "x": 880,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "60552216b3504c5a",
        "type": "comment",
        "z": "1f735b7c1ec2a540",
        "name": "recupera o estado do componente",
        "info": "OPC UA Cliente sempre retorna\num \"payload: 0\", independente do que é\npassado.\n\nAssim é feito um 'get' do estado\npara retornar se o estado do componente\nmudou de fato",
        "x": 1340,
        "y": 360,
        "wires": []
    },
    {
        "id": "4c38741330d8e4f4",
        "type": "subflow:1a29c5eb11ee4ae1",
        "z": "1f735b7c1ec2a540",
        "name": "Send Bad Request",
        "x": 970,
        "y": 440,
        "wires": []
    },
    {
        "id": "6afc88ee26fba6ac",
        "type": "http response",
        "z": "1a29c5eb11ee4ae1",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 400,
        "y": 80,
        "wires": []
    },
    {
        "id": "d90610f48c819e2e",
        "type": "template",
        "z": "1a29c5eb11ee4ae1",
        "name": "Prepare Response",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": {{payload}},\n    \"message\": \"Valor não é do tipo esperado.\"\n}",
        "output": "json",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "6afc88ee26fba6ac"
            ]
        ]
    },
    {
        "id": "df9b6ea2fda7202d",
        "type": "http response",
        "z": "e5b98768751d086a",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "485bba2c4636a4ea",
        "type": "template",
        "z": "e5b98768751d086a",
        "name": "Prepare Response",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": {{payload}},\n    \"message\": \"Valor alterado com sucesso.\"\n}",
        "output": "json",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "df9b6ea2fda7202d"
            ]
        ]
    },
    {
        "id": "08f42bf24c561626",
        "type": "http response",
        "z": "dc1ef54720b3dae9",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "8efdc158c2053ade",
        "type": "template",
        "z": "dc1ef54720b3dae9",
        "name": "Prepare Response",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": {{payload}},\n    \"message\": \"Valor obtido com sucesso.\"\n}",
        "output": "json",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "08f42bf24c561626"
            ]
        ]
    },
    {
        "id": "0b7991cfc665dd32",
        "type": "http in",
        "z": "c7b5baace1041e43",
        "name": "get status",
        "url": "${http_endpoint}",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "a961b59b528f1362"
            ]
        ]
    },
    {
        "id": "a961b59b528f1362",
        "type": "OpcUa-Item",
        "z": "c7b5baace1041e43",
        "item": "${node_id}",
        "datatype": "Boolean",
        "value": "",
        "name": "",
        "x": 420,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "83ba442383dd061b",
        "type": "comment",
        "z": "c7b5baace1041e43",
        "name": "recupera o estado do componente",
        "info": "OPC UA Cliente sempre retorna\num \"payload: 0\", independente do que é\npassado.\n\nAssim é feito um 'get' do estado\npara retornar se o estado do componente\nmudou de fato",
        "x": 527.7777709960938,
        "y": 65.5555534362793,
        "wires": []
    },
    {
        "id": "a3f90678a47d8292",
        "type": "OpcUa-Client",
        "z": "ee1d8aad80d43cea",
        "endpoint": "14e0290e2bea4e8c",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Client Read",
        "x": 670,
        "y": 80,
        "wires": [
            [
                "0bb36ec5b5352b4a"
            ],
            [],
            []
        ]
    },
    {
        "id": "0bb36ec5b5352b4a",
        "type": "switch",
        "z": "ee1d8aad80d43cea",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "609abcc028c9214a"
            ],
            [
                "b8a9038007d940d9"
            ]
        ]
    },
    {
        "id": "ac5cb9cafd519e15",
        "type": "http response",
        "z": "ee1d8aad80d43cea",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 980,
        "y": 300,
        "wires": []
    },
    {
        "id": "b8a9038007d940d9",
        "type": "template",
        "z": "ee1d8aad80d43cea",
        "name": "Prepare Response",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"message\": \"Não conectou-se a bancada.\"\n}",
        "output": "json",
        "x": 750,
        "y": 300,
        "wires": [
            [
                "ac5cb9cafd519e15"
            ]
        ]
    },
    {
        "id": "e0ac18730cae4f6f",
        "type": "OpcUa-Item",
        "z": "ee1d8aad80d43cea",
        "item": "ns=4;i=11",
        "datatype": "Boolean",
        "value": "",
        "name": "",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "a3f90678a47d8292"
            ]
        ]
    },
    {
        "id": "6e3428e3aa890173",
        "type": "function",
        "z": "ee1d8aad80d43cea",
        "name": "function 2",
        "func": "msg = {...msg, benchComponent: msg}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 80,
        "wires": [
            [
                "e0ac18730cae4f6f"
            ]
        ]
    },
    {
        "id": "609abcc028c9214a",
        "type": "function",
        "z": "ee1d8aad80d43cea",
        "name": "function 3",
        "func": "msg = msg.benchComponent\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b6668ccdd7f575b1",
        "type": "subflow:c7b5baace1041e43",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "http_endpoint",
                "value": "/separating/discardDiverter",
                "type": "str"
            },
            {
                "name": "node_id",
                "value": "ns=4;i=2",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 300,
        "wires": [
            [
                "1242d4b7f7cbd401"
            ]
        ]
    },
    {
        "id": "217a4b1eb044e1b2",
        "type": "subflow:1f735b7c1ec2a540",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "node_id",
                "value": "ns=4;i=2",
                "type": "str"
            },
            {
                "name": "http_endpoint",
                "value": "/separating/discardDiverter",
                "type": "str"
            }
        ],
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "0b959b5188eabbef"
            ]
        ]
    },
    {
        "id": "443c43b7bd6b2114",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Discard Diverter",
        "info": "",
        "x": 340,
        "y": 300,
        "wires": []
    },
    {
        "id": "17c7057090b2d153",
        "type": "OpcUa-Client",
        "z": "0008fcf0ac8e3fc4",
        "endpoint": "14e0290e2bea4e8c",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Client Read",
        "x": 990,
        "y": 880,
        "wires": [
            [
                "bdcab355156dd0af"
            ],
            [],
            []
        ]
    },
    {
        "id": "e4bde408c8dbd04f",
        "type": "subflow:c7b5baace1041e43",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "http_endpoint",
                "value": "/separating/discardConveyor",
                "type": "str"
            },
            {
                "name": "node_id",
                "value": "ns=4;i=5",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 360,
        "wires": [
            [
                "1242d4b7f7cbd401"
            ]
        ]
    },
    {
        "id": "85f9a2b2f3bfe2d3",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Discard Conveyor",
        "info": "",
        "x": 350,
        "y": 360,
        "wires": []
    },
    {
        "id": "151f4ba59d3c52fa",
        "type": "OpcUa-Client",
        "z": "0008fcf0ac8e3fc4",
        "endpoint": "14e0290e2bea4e8c",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Client Read",
        "x": 1750,
        "y": 880,
        "wires": [
            [
                "c0ef01a1f55e0068"
            ],
            [],
            []
        ]
    },
    {
        "id": "0bb9fba15c901e17",
        "type": "OpcUa-Client",
        "z": "0008fcf0ac8e3fc4",
        "endpoint": "14e0290e2bea4e8c",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "Client Write",
        "x": 1590,
        "y": 880,
        "wires": [
            [
                "151f4ba59d3c52fa"
            ],
            [],
            []
        ]
    },
    {
        "id": "4ea71096cbfaaa5a",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Discard Diverter",
        "info": "",
        "x": 1420,
        "y": 300,
        "wires": []
    },
    {
        "id": "758d7e8bdd1bd2e7",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Discard Conveyor",
        "info": "",
        "x": 1430,
        "y": 360,
        "wires": []
    },
    {
        "id": "b837eeb86e59ef35",
        "type": "subflow:1f735b7c1ec2a540",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "node_id",
                "value": "ns=4;i=5",
                "type": "str"
            },
            {
                "name": "http_endpoint",
                "value": "/separating/discardConveyor",
                "type": "str"
            }
        ],
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "0b959b5188eabbef"
            ]
        ]
    },
    {
        "id": "bdcab355156dd0af",
        "type": "subflow:dc1ef54720b3dae9",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "x": 1160,
        "y": 880,
        "wires": []
    },
    {
        "id": "c0ef01a1f55e0068",
        "type": "subflow:e5b98768751d086a",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "x": 1940,
        "y": 880,
        "wires": []
    },
    {
        "id": "ccc9caf600c9274f",
        "type": "subflow:c7b5baace1041e43",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "http_endpoint",
                "value": "/separating/mainConveyor",
                "type": "str"
            },
            {
                "name": "node_id",
                "value": "ns=4;i=4",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 420,
        "wires": [
            [
                "1242d4b7f7cbd401"
            ]
        ]
    },
    {
        "id": "87e0bb1522d19ec8",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Main Conveyor",
        "info": "",
        "x": 340,
        "y": 420,
        "wires": []
    },
    {
        "id": "575d0698db586476",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Main Conveyor",
        "info": "",
        "x": 1420,
        "y": 420,
        "wires": []
    },
    {
        "id": "be566b3ea68dfcc3",
        "type": "subflow:1f735b7c1ec2a540",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "node_id",
                "value": "ns=4;i=4",
                "type": "str"
            },
            {
                "name": "http_endpoint",
                "value": "/separating/mainConveyor",
                "type": "str"
            }
        ],
        "x": 1130,
        "y": 420,
        "wires": [
            [
                "0b959b5188eabbef"
            ]
        ]
    },
    {
        "id": "a780be106a6681d2",
        "type": "subflow:c7b5baace1041e43",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "http_endpoint",
                "value": "/separating/lock",
                "type": "str"
            },
            {
                "name": "node_id",
                "value": "ns=4;i=3",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "1242d4b7f7cbd401"
            ]
        ]
    },
    {
        "id": "2f30f81055c4a360",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Lock",
        "info": "",
        "x": 310,
        "y": 480,
        "wires": []
    },
    {
        "id": "d148e5a92b4f9916",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Lock",
        "info": "",
        "x": 1390,
        "y": 480,
        "wires": []
    },
    {
        "id": "51795d20be613dff",
        "type": "subflow:1f735b7c1ec2a540",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "node_id",
                "value": "ns=4;i=3",
                "type": "str"
            },
            {
                "name": "http_endpoint",
                "value": "/separating/lock",
                "type": "str"
            }
        ],
        "x": 1130,
        "y": 480,
        "wires": [
            [
                "0b959b5188eabbef"
            ]
        ]
    },
    {
        "id": "252f30f113605119",
        "type": "subflow:c7b5baace1041e43",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "http_endpoint",
                "value": "/separating/arrivalSensor",
                "type": "str"
            },
            {
                "name": "node_id",
                "value": "ns=4;i=6",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 540,
        "wires": [
            [
                "1242d4b7f7cbd401"
            ]
        ]
    },
    {
        "id": "6d252cb8cad1562f",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Arrival Sensor",
        "info": "",
        "x": 330,
        "y": 540,
        "wires": []
    },
    {
        "id": "50fe9e7b6d8c5af4",
        "type": "subflow:c7b5baace1041e43",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "http_endpoint",
                "value": "/separating/stoppedSensor",
                "type": "str"
            },
            {
                "name": "node_id",
                "value": "ns=4;i=7",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 600,
        "wires": [
            [
                "1242d4b7f7cbd401"
            ]
        ]
    },
    {
        "id": "e6f65592d30622de",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Stopped Sensor",
        "info": "",
        "x": 340,
        "y": 600,
        "wires": []
    },
    {
        "id": "9dbca52b9bd95c98",
        "type": "subflow:c7b5baace1041e43",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "http_endpoint",
                "value": "/separating/heightSensor",
                "type": "str"
            },
            {
                "name": "node_id",
                "value": "ns=4;i=8",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 660,
        "wires": [
            [
                "1242d4b7f7cbd401"
            ]
        ]
    },
    {
        "id": "def37964a3c2176a",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Height Sensor",
        "info": "",
        "x": 330,
        "y": 660,
        "wires": []
    },
    {
        "id": "cb23f8320c9c4de1",
        "type": "subflow:c7b5baace1041e43",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "http_endpoint",
                "value": "/separating/discardSensor",
                "type": "str"
            },
            {
                "name": "node_id",
                "value": "ns=4;i=10",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 720,
        "wires": [
            [
                "1242d4b7f7cbd401"
            ]
        ]
    },
    {
        "id": "a86caf86bdb4a723",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Discard Sensor",
        "info": "",
        "x": 340,
        "y": 720,
        "wires": []
    },
    {
        "id": "ad4f56d221faf8ca",
        "type": "subflow:c7b5baace1041e43",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "env": [
            {
                "name": "http_endpoint",
                "value": "/separating/exitSensor",
                "type": "str"
            },
            {
                "name": "node_id",
                "value": "ns=4;i=9",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 780,
        "wires": [
            [
                "1242d4b7f7cbd401"
            ]
        ]
    },
    {
        "id": "318e64db59e34e3f",
        "type": "comment",
        "z": "0008fcf0ac8e3fc4",
        "name": "Exit Sensor",
        "info": "",
        "x": 330,
        "y": 780,
        "wires": []
    },
    {
        "id": "1242d4b7f7cbd401",
        "type": "subflow:ee1d8aad80d43cea",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "x": 800,
        "y": 880,
        "wires": [
            [
                "17c7057090b2d153"
            ]
        ]
    },
    {
        "id": "0b959b5188eabbef",
        "type": "subflow:ee1d8aad80d43cea",
        "z": "0008fcf0ac8e3fc4",
        "x": 1400,
        "y": 880,
        "wires": [
            [
                "0bb9fba15c901e17"
            ]
        ]
    },
    {
        "id": "ab69d73f6fbbbf51",
        "type": "function",
        "z": "0008fcf0ac8e3fc4",
        "name": "Complete href URL",
        "func": "const td = JSON.parse(msg.payload)\n\nconst properties = Object.entries(td.properties).forEach(([key, value]) => {\n    if(value.forms && value.forms.length)\n        value.forms[0].href = env.get(\"http\") + value.forms[0].href\n    return value\n})\n\nconst actions = Object.entries(td.actions).forEach(([key, value]) => {\n    if (value.forms && value.forms.length)\n        value.forms[0].href = env.get(\"http\") + value.forms[0].href\n    return value\n})\n\nmsg.payload = { properties, actions, ...td }\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1020,
        "wires": [
            [
                "5049e2ddfb18babc"
            ]
        ]
    },
    {
        "id": "e9d3486ec2a99511",
        "type": "file in",
        "z": "0008fcf0ac8e3fc4",
        "name": "Read td file",
        "filename": "/data/td/separating.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 770,
        "y": 1020,
        "wires": [
            [
                "ab69d73f6fbbbf51"
            ]
        ]
    },
    {
        "id": "f4ef609fc312896d",
        "type": "http in",
        "z": "0008fcf0ac8e3fc4",
        "name": "GET td",
        "url": "/separating/td",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 570,
        "y": 1020,
        "wires": [
            [
                "e9d3486ec2a99511"
            ]
        ]
    },
    {
        "id": "5049e2ddfb18babc",
        "type": "http response",
        "z": "0008fcf0ac8e3fc4",
        "name": "TD Response",
        "statusCode": "200",
        "headers": {},
        "x": 1220,
        "y": 1020,
        "wires": []
    },
    {
        "id": "775440880db77696",
        "type": "ui-button",
        "z": "0008fcf0ac8e3fc4",
        "group": "8347937ce163c9e6",
        "name": "",
        "label": "",
        "order": 3,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "button",
        "icon": "",
        "iconPosition": "left",
        "payload": "{\"value\": true}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 330,
        "y": 1360,
        "wires": [
            [
                "d017ab92394b5498"
            ]
        ]
    },
    {
        "id": "43ea5bc5cc5d043b",
        "type": "ui-text-input",
        "z": "0008fcf0ac8e3fc4",
        "group": "8347937ce163c9e6",
        "name": "",
        "label": "text",
        "order": 2,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 730,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "2927e43445be1cf2",
        "type": "http request",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/teste",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 300,
        "y": 1260,
        "wires": [
            [
                "5de79adf975160e0",
                "ad0de76862a1132e"
            ]
        ]
    },
    {
        "id": "ada8f9b751bbfd95",
        "type": "inject",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1260,
        "wires": [
            [
                "2927e43445be1cf2"
            ]
        ]
    },
    {
        "id": "689e04c9e791da54",
        "type": "http in",
        "z": "0008fcf0ac8e3fc4",
        "name": "GET teste",
        "url": "/teste",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1080,
        "wires": [
            [
                "76acc8e0bde5e8d1"
            ]
        ]
    },
    {
        "id": "ad0001c9db3a549d",
        "type": "http response",
        "z": "0008fcf0ac8e3fc4",
        "name": "GET teste response",
        "statusCode": "200",
        "headers": {},
        "x": 650,
        "y": 1080,
        "wires": []
    },
    {
        "id": "76acc8e0bde5e8d1",
        "type": "template",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": true\n}",
        "output": "json",
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "ad0001c9db3a549d"
            ]
        ]
    },
    {
        "id": "8db02a6fb1d7823b",
        "type": "http in",
        "z": "0008fcf0ac8e3fc4",
        "name": "POST teste",
        "url": "/teste",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1140,
        "wires": [
            [
                "7e24526aaa98cf1a",
                "80f2f5d15d6a7dd8"
            ]
        ]
    },
    {
        "id": "3f8848707be23e91",
        "type": "http response",
        "z": "0008fcf0ac8e3fc4",
        "name": "POST teste response",
        "statusCode": "201",
        "headers": {},
        "x": 660,
        "y": 1140,
        "wires": []
    },
    {
        "id": "7e24526aaa98cf1a",
        "type": "template",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"value\": true\n}",
        "output": "json",
        "x": 360,
        "y": 1140,
        "wires": [
            [
                "3f8848707be23e91"
            ]
        ]
    },
    {
        "id": "5de79adf975160e0",
        "type": "function",
        "z": "0008fcf0ac8e3fc4",
        "name": "function 1",
        "func": "msg.payload = JSON.parse(msg.payload).value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1260,
        "wires": [
            [
                "43ea5bc5cc5d043b"
            ]
        ]
    },
    {
        "id": "215bd4eca056e1d2",
        "type": "http request",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/separating/discardConveyor",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 660,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "80f2f5d15d6a7dd8",
        "type": "debug",
        "z": "0008fcf0ac8e3fc4",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1180,
        "wires": []
    },
    {
        "id": "9a21cc3e10bfb659",
        "type": "ui-template",
        "z": "0008fcf0ac8e3fc4",
        "group": "8347937ce163c9e6",
        "page": "",
        "ui": "",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div class=\"component-container\">\n        <h4>Discard Conveyor</h4>\n        <button class=\"status-button {{msg.payload}}\" ng-class={{msg.payload}}>{{msg.payload}}</button>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            // define variables available component-wide\n            // (in <template> and component functions)\n            return {\n                count: 0\n            }\n        },\n        watch: {\n            // watch for any changes of \"count\"\n            count: function () {\n                if (this.count % 5 === 0) {\n                    this.send({payload: 'Multiple of 5'})\n                }\n            }\n        },\n        computed: {\n            // automatically compute this variable\n            // whenever VueJS deems appropriate\n            formattedCount: function () {\n                return this.count + ' Apples'\n            }\n        },\n        methods: {\n            // expose a method to our <template> and Vue Application\n            increase: function () {\n                this.count++\n            }\n        },\n        mounted() {\n            // code here when the component is first loaded\n        },\n        unmounted() {\n            // code here when the component is removed from the Dashboard\n            // i.e. when the user navigates away from the page\n        }\n    }\n</script>\n<style>\n    /* define any styles here - supports raw CSS */\n    .status-button {\n        width: 5rem;\n        height: 2rem;\n        border-radius: 1rem;\n    }\n    .component-container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    }\n    .teste {\n        background-color: green;\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "4b3381aee7679849",
        "type": "change",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "teste",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1460,
        "wires": [
            [
                "9a21cc3e10bfb659"
            ]
        ]
    },
    {
        "id": "7734af0fc8217ada",
        "type": "inject",
        "z": "0008fcf0ac8e3fc4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1460,
        "wires": [
            [
                "4b3381aee7679849"
            ]
        ]
    },
    {
        "id": "ad0de76862a1132e",
        "type": "function",
        "z": "0008fcf0ac8e3fc4",
        "name": "function 4",
        "func": "const payload = JSON.parse(msg.payload)\nmsg = {...msg, currentValue: payload.value}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 1360,
        "wires": [
            [
                "775440880db77696"
            ]
        ]
    },
    {
        "id": "d017ab92394b5498",
        "type": "function",
        "z": "0008fcf0ac8e3fc4",
        "name": "function 5",
        "func": "msg.payload = {\n    value: !msg.currentValue\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "215bd4eca056e1d2"
            ]
        ]
    }
]